using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using System.Linq.Expressions;
using @@application.@@domainDomain.Model;
using @@application.@@domainDomain.IRepositories;
using @@application.@@domainDomain.IServices;

namespace @@application.@@domainDomain.Services
{
    
    public class @@name:I@@name
    {
        private IUnitOfWork _uow;
    	
    	public @@name(IUnitOfWork uow)
    	{
    		_uow=uow;
    	}
    	
    	public async Task DeleteAsync(Guid id)
        {
            var repository = await _uow.GetRepository<I@@entityRepository>();
            await repository.DeleteAsync(id);
        }

        public async Task<IList<@@entity>> GetAllAsync()
        {
            var repository = await _uow.GetRepository<I@@entityRepository>();
            return await repository.GetAllAsync();
        }

        public async Task<@@entity> GetByIdAsync(Guid id)
        {
            var repository = await _uow.GetRepository<I@@entityRepository>();
            return await repository.GetByIdAsync(id);
        }
        
        public async Task<@@entity> AddAsync(@@entity entity)
        {
        	var repository = await _uow.GetRepository<I@@entityRepository>();
            return await repository.InsertAsync(entity);
        }
        
        public async Task<@@entity> UpdateAsync(@@entity entity)
        {
        	var repository = await _uow.GetRepository<I@@entityRepository>();
            return await repository.UpdateAsync(entity);
        }