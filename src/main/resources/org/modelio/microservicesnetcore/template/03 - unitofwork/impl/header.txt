using System.Threading.Tasks;
using core.repository;
using core.common;

namespace @@application.@@domain.uow
{
    public class UnitOfWorkMongodb : IUnitOfWork
    {
        protected IStore<Guid> _store;
        protected ITransaction _transaction;
        protected IFactory _factory;
        
        @@properties
        

        @@construtor

        public async Task CommitAsync()
        {
            _transaction = null;
        }


        public async Task<ITransaction> BeginAsync()
        {
            if (_transaction != null)
            {
                return _transaction;
            }
            else
            {
                _transaction = new Transaction<Guid>(this);
                return _transaction;
            }
        }

        public async Task RollbackAsync()
        {
            _transaction = null;
        }


        public void Dispose()
        {
            if (_transaction != null)
            {
                RollbackAsync().Wait();
            }
        }

        @@methodGetRepository
    }
}
        
    