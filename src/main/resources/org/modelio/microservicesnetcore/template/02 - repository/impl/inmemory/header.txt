using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using System.Linq.Expressions;
using Core.Repository;
using @@application.@@domainDomain.Model;
using @@application.@@domainDomain.IRepositories;

namespace @@application.@@domainDomain.RepositoriesInMemory
{
    
    public class @@nameInMemory:I@@name
    {
        private IStore<Guid> _store;
    	
    	public @@nameInMemory(IStore<Guid> store)
    	{
    		_store=store;
    	}
    	
    	public async Task DeleteAsync(Guid id)
        {
            await _store.RemoveAsync<@@entity>(id);
        }

        public async Task<IList<@@entity>> GetAllAsync()
        {
            return await _store.GetAllAsync<@@entity>();
        }

        public async Task<@@entity> GetByIdAsync(Guid id)
        {
            return await _store.GetByIdAsync<@@entity>(id);
        }
        
        public async Task<IList<@@entity>> FindAsync(Expression<Func<@@entity, bool>> predicate)
        {
            return await _store.FindAsync<@@entity>(predicate);
        }

        public async Task<@@entity> InsertAsync(@@entity entity)
        {
            await _store.UpsertAsync<@@entity>(entity);
            return entity;
        }
        public async Task<@@entity> UpdateAsync(@@entity entity)
        {
            await _store.UpsertAsync<@@entity>(entity);
            return entity;
        }